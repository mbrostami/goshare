// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.12
// source: api/grpc/pb/goshare.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegistrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *RegistrationResponse) Reset() {
	*x = RegistrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_pb_goshare_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationResponse) ProtoMessage() {}

func (x *RegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_pb_goshare_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationResponse.ProtoReflect.Descriptor instead.
func (*RegistrationResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_pb_goshare_proto_rawDescGZIP(), []int{0}
}

func (x *RegistrationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegistrationResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *ShareResponse) Reset() {
	*x = ShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_pb_goshare_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareResponse) ProtoMessage() {}

func (x *ShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_pb_goshare_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareResponse.ProtoReflect.Descriptor instead.
func (*ShareResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_pb_goshare_proto_rawDescGZIP(), []int{1}
}

func (x *ShareResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ShareResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type RegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username  string `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	PubKey    string `protobuf:"bytes,2,opt,name=PubKey,proto3" json:"PubKey,omitempty"`
	Signature string `protobuf:"bytes,3,opt,name=Signature,proto3" json:"Signature,omitempty"`
}

func (x *RegistrationRequest) Reset() {
	*x = RegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_pb_goshare_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationRequest) ProtoMessage() {}

func (x *RegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_pb_goshare_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationRequest.ProtoReflect.Descriptor instead.
func (*RegistrationRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_pb_goshare_proto_rawDescGZIP(), []int{2}
}

func (x *RegistrationRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegistrationRequest) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

func (x *RegistrationRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type InitShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receiver string `protobuf:"bytes,1,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
}

func (x *InitShareRequest) Reset() {
	*x = InitShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_pb_goshare_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitShareRequest) ProtoMessage() {}

func (x *InitShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_pb_goshare_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitShareRequest.ProtoReflect.Descriptor instead.
func (*InitShareRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_pb_goshare_proto_rawDescGZIP(), []int{3}
}

func (x *InitShareRequest) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

type InitShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceiverPubKey string `protobuf:"bytes,1,opt,name=ReceiverPubKey,proto3" json:"ReceiverPubKey,omitempty"`
}

func (x *InitShareResponse) Reset() {
	*x = InitShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_pb_goshare_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitShareResponse) ProtoMessage() {}

func (x *InitShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_pb_goshare_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitShareResponse.ProtoReflect.Descriptor instead.
func (*InitShareResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_pb_goshare_proto_rawDescGZIP(), []int{4}
}

func (x *InitShareResponse) GetReceiverPubKey() string {
	if x != nil {
		return x.ReceiverPubKey
	}
	return ""
}

type ShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName        string `protobuf:"bytes,1,opt,name=FileName,proto3" json:"FileName,omitempty"`
	Sender          string `protobuf:"bytes,2,opt,name=Sender,proto3" json:"Sender,omitempty"`
	SenderPubKey    string `protobuf:"bytes,3,opt,name=SenderPubKey,proto3" json:"SenderPubKey,omitempty"`
	SenderSignature string `protobuf:"bytes,4,opt,name=SenderSignature,proto3" json:"SenderSignature,omitempty"`
	Receiver        string `protobuf:"bytes,5,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	SequenceNumber  int64  `protobuf:"varint,6,opt,name=SequenceNumber,proto3" json:"SequenceNumber,omitempty"`
	Data            []byte `protobuf:"bytes,7,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *ShareRequest) Reset() {
	*x = ShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_pb_goshare_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareRequest) ProtoMessage() {}

func (x *ShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_pb_goshare_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareRequest.ProtoReflect.Descriptor instead.
func (*ShareRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_pb_goshare_proto_rawDescGZIP(), []int{5}
}

func (x *ShareRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ShareRequest) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *ShareRequest) GetSenderPubKey() string {
	if x != nil {
		return x.SenderPubKey
	}
	return ""
}

func (x *ShareRequest) GetSenderSignature() string {
	if x != nil {
		return x.SenderSignature
	}
	return ""
}

func (x *ShareRequest) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *ShareRequest) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *ShareRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReceiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceiverUsername  string `protobuf:"bytes,1,opt,name=ReceiverUsername,proto3" json:"ReceiverUsername,omitempty"`
	ReceiverPubKey    string `protobuf:"bytes,2,opt,name=ReceiverPubKey,proto3" json:"ReceiverPubKey,omitempty"`
	ReceiverSignature string `protobuf:"bytes,3,opt,name=ReceiverSignature,proto3" json:"ReceiverSignature,omitempty"`
}

func (x *ReceiveRequest) Reset() {
	*x = ReceiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_pb_goshare_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveRequest) ProtoMessage() {}

func (x *ReceiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_pb_goshare_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveRequest.ProtoReflect.Descriptor instead.
func (*ReceiveRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_pb_goshare_proto_rawDescGZIP(), []int{6}
}

func (x *ReceiveRequest) GetReceiverUsername() string {
	if x != nil {
		return x.ReceiverUsername
	}
	return ""
}

func (x *ReceiveRequest) GetReceiverPubKey() string {
	if x != nil {
		return x.ReceiverPubKey
	}
	return ""
}

func (x *ReceiveRequest) GetReceiverSignature() string {
	if x != nil {
		return x.ReceiverSignature
	}
	return ""
}

type ReceiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName        string `protobuf:"bytes,1,opt,name=FileName,proto3" json:"FileName,omitempty"`
	Sender          string `protobuf:"bytes,2,opt,name=Sender,proto3" json:"Sender,omitempty"`
	SenderPubKey    string `protobuf:"bytes,3,opt,name=SenderPubKey,proto3" json:"SenderPubKey,omitempty"`
	SenderSignature string `protobuf:"bytes,4,opt,name=SenderSignature,proto3" json:"SenderSignature,omitempty"`
	SequenceNumber  int64  `protobuf:"varint,6,opt,name=SequenceNumber,proto3" json:"SequenceNumber,omitempty"`
	Data            []byte `protobuf:"bytes,7,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *ReceiveResponse) Reset() {
	*x = ReceiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_grpc_pb_goshare_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveResponse) ProtoMessage() {}

func (x *ReceiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_pb_goshare_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveResponse.ProtoReflect.Descriptor instead.
func (*ReceiveResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_pb_goshare_proto_rawDescGZIP(), []int{7}
}

func (x *ReceiveResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ReceiveResponse) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *ReceiveResponse) GetSenderPubKey() string {
	if x != nil {
		return x.SenderPubKey
	}
	return ""
}

func (x *ReceiveResponse) GetSenderSignature() string {
	if x != nil {
		return x.SenderSignature
	}
	return ""
}

func (x *ReceiveResponse) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *ReceiveResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_api_grpc_pb_goshare_proto protoreflect.FileDescriptor

var file_api_grpc_pb_goshare_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x2f, 0x67, 0x6f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x47, 0x6f, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x22, 0x46, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3f, 0x0a, 0x0d,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x67, 0x0a,
	0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x2e, 0x0a, 0x10, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x22, 0x3b, 0x0a, 0x11, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x75, 0x62,
	0x4b, 0x65, 0x79, 0x22, 0xe8, 0x01, 0x0a, 0x0c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x0f,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x53, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x92,
	0x01, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50,
	0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12,
	0x28, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x32, 0x9a, 0x02, 0x0a, 0x07, 0x47, 0x6f, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x12, 0x44, 0x0a, 0x09, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x19,
	0x2e, 0x47, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x47, 0x6f, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x12, 0x15, 0x2e, 0x47, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x6f, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x40, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x12, 0x17, 0x2e, 0x47, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x47, 0x6f, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x49, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x47, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x47, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_grpc_pb_goshare_proto_rawDescOnce sync.Once
	file_api_grpc_pb_goshare_proto_rawDescData = file_api_grpc_pb_goshare_proto_rawDesc
)

func file_api_grpc_pb_goshare_proto_rawDescGZIP() []byte {
	file_api_grpc_pb_goshare_proto_rawDescOnce.Do(func() {
		file_api_grpc_pb_goshare_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_grpc_pb_goshare_proto_rawDescData)
	})
	return file_api_grpc_pb_goshare_proto_rawDescData
}

var file_api_grpc_pb_goshare_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_api_grpc_pb_goshare_proto_goTypes = []interface{}{
	(*RegistrationResponse)(nil), // 0: GoShare.RegistrationResponse
	(*ShareResponse)(nil),        // 1: GoShare.ShareResponse
	(*RegistrationRequest)(nil),  // 2: GoShare.RegistrationRequest
	(*InitShareRequest)(nil),     // 3: GoShare.InitShareRequest
	(*InitShareResponse)(nil),    // 4: GoShare.InitShareResponse
	(*ShareRequest)(nil),         // 5: GoShare.ShareRequest
	(*ReceiveRequest)(nil),       // 6: GoShare.ReceiveRequest
	(*ReceiveResponse)(nil),      // 7: GoShare.ReceiveResponse
}
var file_api_grpc_pb_goshare_proto_depIdxs = []int32{
	3, // 0: GoShare.GoShare.InitShare:input_type -> GoShare.InitShareRequest
	5, // 1: GoShare.GoShare.Share:input_type -> GoShare.ShareRequest
	6, // 2: GoShare.GoShare.Receive:input_type -> GoShare.ReceiveRequest
	2, // 3: GoShare.GoShare.Register:input_type -> GoShare.RegistrationRequest
	4, // 4: GoShare.GoShare.InitShare:output_type -> GoShare.InitShareResponse
	1, // 5: GoShare.GoShare.Share:output_type -> GoShare.ShareResponse
	7, // 6: GoShare.GoShare.Receive:output_type -> GoShare.ReceiveResponse
	0, // 7: GoShare.GoShare.Register:output_type -> GoShare.RegistrationResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_grpc_pb_goshare_proto_init() }
func file_api_grpc_pb_goshare_proto_init() {
	if File_api_grpc_pb_goshare_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_grpc_pb_goshare_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_pb_goshare_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_pb_goshare_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_pb_goshare_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_pb_goshare_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_pb_goshare_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_pb_goshare_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_grpc_pb_goshare_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_grpc_pb_goshare_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_grpc_pb_goshare_proto_goTypes,
		DependencyIndexes: file_api_grpc_pb_goshare_proto_depIdxs,
		MessageInfos:      file_api_grpc_pb_goshare_proto_msgTypes,
	}.Build()
	File_api_grpc_pb_goshare_proto = out.File
	file_api_grpc_pb_goshare_proto_rawDesc = nil
	file_api_grpc_pb_goshare_proto_goTypes = nil
	file_api_grpc_pb_goshare_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GoShareClient is the client API for GoShare service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoShareClient interface {
	InitShare(ctx context.Context, in *InitShareRequest, opts ...grpc.CallOption) (*InitShareResponse, error)
	Share(ctx context.Context, opts ...grpc.CallOption) (GoShare_ShareClient, error)
	Receive(ctx context.Context, in *ReceiveRequest, opts ...grpc.CallOption) (GoShare_ReceiveClient, error)
	Register(ctx context.Context, in *RegistrationRequest, opts ...grpc.CallOption) (*RegistrationResponse, error)
}

type goShareClient struct {
	cc grpc.ClientConnInterface
}

func NewGoShareClient(cc grpc.ClientConnInterface) GoShareClient {
	return &goShareClient{cc}
}

func (c *goShareClient) InitShare(ctx context.Context, in *InitShareRequest, opts ...grpc.CallOption) (*InitShareResponse, error) {
	out := new(InitShareResponse)
	err := c.cc.Invoke(ctx, "/GoShare.GoShare/InitShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goShareClient) Share(ctx context.Context, opts ...grpc.CallOption) (GoShare_ShareClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GoShare_serviceDesc.Streams[0], "/GoShare.GoShare/Share", opts...)
	if err != nil {
		return nil, err
	}
	x := &goShareShareClient{stream}
	return x, nil
}

type GoShare_ShareClient interface {
	Send(*ShareRequest) error
	Recv() (*ShareResponse, error)
	grpc.ClientStream
}

type goShareShareClient struct {
	grpc.ClientStream
}

func (x *goShareShareClient) Send(m *ShareRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *goShareShareClient) Recv() (*ShareResponse, error) {
	m := new(ShareResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *goShareClient) Receive(ctx context.Context, in *ReceiveRequest, opts ...grpc.CallOption) (GoShare_ReceiveClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GoShare_serviceDesc.Streams[1], "/GoShare.GoShare/Receive", opts...)
	if err != nil {
		return nil, err
	}
	x := &goShareReceiveClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GoShare_ReceiveClient interface {
	Recv() (*ReceiveResponse, error)
	grpc.ClientStream
}

type goShareReceiveClient struct {
	grpc.ClientStream
}

func (x *goShareReceiveClient) Recv() (*ReceiveResponse, error) {
	m := new(ReceiveResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *goShareClient) Register(ctx context.Context, in *RegistrationRequest, opts ...grpc.CallOption) (*RegistrationResponse, error) {
	out := new(RegistrationResponse)
	err := c.cc.Invoke(ctx, "/GoShare.GoShare/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoShareServer is the server API for GoShare service.
type GoShareServer interface {
	InitShare(context.Context, *InitShareRequest) (*InitShareResponse, error)
	Share(GoShare_ShareServer) error
	Receive(*ReceiveRequest, GoShare_ReceiveServer) error
	Register(context.Context, *RegistrationRequest) (*RegistrationResponse, error)
}

// UnimplementedGoShareServer can be embedded to have forward compatible implementations.
type UnimplementedGoShareServer struct {
}

func (*UnimplementedGoShareServer) InitShare(context.Context, *InitShareRequest) (*InitShareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitShare not implemented")
}
func (*UnimplementedGoShareServer) Share(GoShare_ShareServer) error {
	return status.Errorf(codes.Unimplemented, "method Share not implemented")
}
func (*UnimplementedGoShareServer) Receive(*ReceiveRequest, GoShare_ReceiveServer) error {
	return status.Errorf(codes.Unimplemented, "method Receive not implemented")
}
func (*UnimplementedGoShareServer) Register(context.Context, *RegistrationRequest) (*RegistrationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}

func RegisterGoShareServer(s *grpc.Server, srv GoShareServer) {
	s.RegisterService(&_GoShare_serviceDesc, srv)
}

func _GoShare_InitShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoShareServer).InitShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GoShare.GoShare/InitShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoShareServer).InitShare(ctx, req.(*InitShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoShare_Share_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GoShareServer).Share(&goShareShareServer{stream})
}

type GoShare_ShareServer interface {
	Send(*ShareResponse) error
	Recv() (*ShareRequest, error)
	grpc.ServerStream
}

type goShareShareServer struct {
	grpc.ServerStream
}

func (x *goShareShareServer) Send(m *ShareResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *goShareShareServer) Recv() (*ShareRequest, error) {
	m := new(ShareRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _GoShare_Receive_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReceiveRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GoShareServer).Receive(m, &goShareReceiveServer{stream})
}

type GoShare_ReceiveServer interface {
	Send(*ReceiveResponse) error
	grpc.ServerStream
}

type goShareReceiveServer struct {
	grpc.ServerStream
}

func (x *goShareReceiveServer) Send(m *ReceiveResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _GoShare_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegistrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoShareServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GoShare.GoShare/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoShareServer).Register(ctx, req.(*RegistrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoShare_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GoShare.GoShare",
	HandlerType: (*GoShareServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InitShare",
			Handler:    _GoShare_InitShare_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _GoShare_Register_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Share",
			Handler:       _GoShare_Share_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Receive",
			Handler:       _GoShare_Receive_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api/grpc/pb/goshare.proto",
}
